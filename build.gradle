plugins {
    id 'groovy'
    id 'java'
}

apply plugin: 'application'

group 'samples'
version = '1.0'
archivesBaseName = "FileUpload"
mainClassName = "FileUpload"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {

    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-all
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.2'

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'

    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.10'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpmime
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.6'

    // https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver
    compile group: 'org.mongodb', name: 'mongo-java-driver', version: '3.8.1'

    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'

    // https://mvnrepository.com/artifact/info.picocli/picocli
    compile group: 'info.picocli', name: 'picocli', version: '3.5.2'

// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
}

task runScript(dependsOn: 'classes', type: JavaExec) {
    main = 'Extract'
    classpath = sourceSets.main.runtimeClasspath
}

task runScriptMock(dependsOn: 'classes', type: JavaExec) {
    main = 'MockJSONServers'
    classpath = sourceSets.main.runtimeClasspath
}

task runFileUpload(dependsOn: 'classes', type: JavaExec) {
    main = 'FileUpload'
    classpath = sourceSets.main.runtimeClasspath
}

defaultTasks = ['uberjar']

// Use this task to generate the stand-alone excutable jar of groovy
task uberjar(type: Jar, dependsOn: [':compileJava', ':compileGroovy']) {
    manifest {
        attributes 'Main-Class': 'FileUpload'
    }
    // All groovy classes
    from configurations.runtime.asFileTree.files.collect { zipTree(it) }
    with jar
}